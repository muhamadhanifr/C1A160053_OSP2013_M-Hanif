n = 10

	  ((i=n) or 
     (i mod 2=1) or => ('*')    (j mod 2=1)) => ('*')
i	else => ('0')		   	j

1              *		(2*1-1)=  1	*
2              0		(2*2-1)=  3	*
3              *		(2*3-1)=  5	*
4              0		(2*4-1)=  7	*
5              *		(2*5-1)=  9	*
6              0		(2*6-1)=  11	*
7              *		(2*7-1)=  13	*
8              0                (2*8-1)=  15	*
9	       *		(2*9-1)=  17	*
10	       *		(2*10-1)= 19	*



for i := 1 to n do

 for k := i to n-1 do write (' ')
 for j := 1 to (2*i-1) do
     if (i=n) or (i mod 2=1) then write ('*')
     else if j mod 2=1 then write('*')
     else write('0');


l	(2*l-1) = o	(o mod 2 = 1) => ('*')
			    else => ('0')

10	(2*10-1)= 19		*
9	(2*9-1)=  17		*
8	(2*8-1)=  15		*
7	(2*7-1) = 13		*
6	(2*6-1) = 11		*
5	(2*5-1) = 9		*
4	(2*4-1) = 7		*
3	(2*3-1) = 5		*
2	(2*2-1) = 3		*

for l := n down to 2

 for m := l to n do write (' ')
 for o := (2*l-1) downto 3 do
     if o mod 2 = 1 then write ('*')
     else write ('0')